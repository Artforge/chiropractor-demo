<%= stylesheet_link_tag "uploadify" %>
<%= javascript_include_tag 	"jquery.uploadify.min","swfobject" %>
<%= javascript_include_tag "chiropractor_helpers" %>

<script>
	<%= chiropractor_scripts(User,@users.to_json,{
		:before_edit => "initEdit", 
		:after_update => "completeUpdate",
		:before_new => "initNew", 
		:after_create => "completeCreate", 
		:on_error => "saveError"}) 
	%>
</script>

<script>

	function initEdit(model){
		editFormText(model)
		unUploadify(model.editor.find("#user_avatar"));
		initUploadify(model);
	}
	
	function initNew(model){
		newFormText(model)
		unUploadify(model.editor.find("#user_avatar"));
	}

	function closeOverlay(){
		$('a.button[rel*="form"]').each(function() {
			$(this).overlay().close();
		});
	}

	function completeUpdate(model){
		closeOverlay();
		model.display.effect("highlight", {}, 1000);
	}
	
	function completeCreate(model){
		initOverlay(model.display)
		closeOverlay();
	}
	
	function initOverlay(node){
		var scope = $('a.button[rel*="form"]');
		if (node){
			scope = node.find('a.button[rel*="form"]')
		};
		scope.overlay({
			mask: {color: '#000000', loadSpeed: 200, opacity: 0.6}
		});
	}
		
	var overlay;
	
	$(document).ready(function() {
		initOverlay();
	});

</script>

<div style="width:800px;">
	<h1>
		Listing users
		<%= link_to('New User', new_user_path, :rel => "#user_form_container", :id => "new_user", :class => "green button fr") %>
	</h1>

	<table class="data" width="100%">
		<thead>
			<tr>
				<th>&nbsp;</th>
				<th data-action="sort" data-attribute="email">Email<span class="icon"/></th>
				<th data-action="sort" data-attribute="name">Name<span class="icon"/></th>
				<th data-action="sort" data-attribute="date_of_birth">Date of birth<span class="icon"/></th>
				<th data-action="sort" data-attribute="favorite_color">Color<span class="icon"/></th>
				<th class="noborder" style="width:180px;">&nbsp;</th>
			</tr>
		</thead>
		<tbody data-collection="users">
			<% @users.each do |user| %>
				<%= render :partial => "index_row", :locals => {:user => user} %>
			<% end %>
			<!-- This pattern below could be interesting for situations with no existing records -->
			<!-- Another option would be pulling the partial from the request in the event of nothing to copy -->
			<%= render :partial => "index_row", :locals => {:user => User.new, :template => true} %>
		</tbody>
	</table>
</div>

<% @user = @users.first %>

<div id="user_form_container" class="facebox" data-model="<%= @user.class.to_s.underscore %>" data-view="edit">
	<h2>Edit your profile</h2>
	<div>
		<%= render :partial => 'form', :locals => {:user => User.new} %>
	</div>
</div>

<div id="user_display_form" class="facebox" data-model="<%= @user.class.to_s.underscore %>" data-view="show">
	<p><b>Email:</b><%= ajax_content_tag(@user, :email) %></p>
	<p><b>Name:</b><%= ajax_content_tag(@user, :name) %></p>
	<p><b>Biography:</b><%= ajax_content_tag(@user, :biography) %></p>
	<p><b>Date of birth:</b><%= ajax_content_tag(@user, :date_of_birth) %></p>
	<p><b>Favorite color:</b><%= ajax_content_tag(@user, :favorite_color) %></p>
	<p><b>Updated:</b><%= ajax_content_tag(@user, :updated_at) %></p>
</div>

<script>

	<% arr = [] %>
	<% request.env['HTTP_COOKIE'].each_char{|c| arr.push(c[0].to_s)} %>
	<% session = arr.join("x") %>
	
	function initUploadify(model){
		$('#user_avatar').uploadify ({
			script          : "/users/" + model.id,
			method			: "PUT",
			uploader        : '/flash/uploadify.swf',
			multi           : false,
			auto            : true,
			queueID			: "fileQueue",
			scriptData      : {'session_encoded': '<%= session %>', 'foo': 'bar', '_method' : 'put','_http_accept': 'text/javascript'},
			cancelImg       : '/images/cancel.png',  //take care that the image is accessible
			onComplete	  : uploadComplete
		});
	}
	
	function unUploadify(element){
		if(!element){
			var element="*";
		}
		$(element).next("object").remove();
		$(element).css("display","inline");
		$(".uploadifyQueueItem").remove();
	}
	
	function uploadComplete(event, ID, fileObj, response, data){
		console.log("uploadComplete")
		console.log("event",event);
		console.log("ID",ID);
		console.log("fileObj",fileObj);
		console.log("response",response);
		console.log("data",data);
	}
	
</script>
